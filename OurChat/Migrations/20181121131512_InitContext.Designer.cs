// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OurChat.Entities;

namespace OurChat.Migrations
{
    [DbContext(typeof(OurChatContext))]
    [Migration("20181121131512_InitContext")]
    partial class InitContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OurChat.Entities.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<int>("DocType");

                    b.Property<bool>("IsLive");

                    b.Property<string>("Link");

                    b.Property<int>("MessageID");

                    b.Property<int>("Size");

                    b.Property<string>("Title");

                    b.Property<string>("UniqueID");

                    b.HasKey("ID");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("OurChat.Entities.Member", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Email");

                    b.Property<string>("Fname");

                    b.Property<bool>("IsLive");

                    b.Property<bool>("IsLocked");

                    b.Property<DateTime>("LastLoginDate");

                    b.Property<DateTime>("LastPasswordChangedDate");

                    b.Property<string>("Lname");

                    b.Property<int>("LoginAttempt");

                    b.Property<string>("Password");

                    b.Property<string>("PicturePath");

                    b.Property<string>("Position");

                    b.Property<string>("ResetCode");

                    b.Property<string>("Title");

                    b.HasKey("ID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OurChat.Entities.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreationDate");

                    b.Property<bool>("IsLive");

                    b.Property<string>("ReceipientID");

                    b.Property<string>("SenderID");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("OurChat.Entities.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsLive");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
